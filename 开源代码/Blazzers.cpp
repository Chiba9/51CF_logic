#include "ai.h"
#include "definition.h"
#include "user_toolbox.h"
#include <iostream>
#include <vector>
#include <time.h>
#include <stdlib.h>
int Titter=0;//有改动
int Shrine=-2;
int token3=-1;
double MINEXPENSE=10000;
void player_ai(Info& info)
{
	int i,j,k,judge,judge2,judge3,judge4,judge5,judge6,maxImplement,mytowernum=0,doneImplement=0,n,p,m,mt,ot;
	int token1,token2,token4,token5,token6;
	int player1,player2,player3,player4;
	int warjudge=1;//0表示不能开战
	double sourcemax=-1;
	double sourceAll,sourceMine;
	double sourcemin=300;
	double mindistance=10000;
	double threatindex,resourseav;
	double maxthreat=-1;
	double minexpense=1000;//最小损耗值
	double maxexpense=-1000;
	double expense,sourcemount;
	double s;
	int nMax=-1;
	judge6=0;
	sourceAll=0;
	sourceMine=0;
	token1=-1;//局部脆弱点
	judge3=0;//1表示我方资源已占绝对优势 2表示还有更强的
	int a;
	if(info.round>100&&Titter==0)
	{
		Titter=1;
	}//强行出击
	judge=0;
	for(i=0;i<info.towerNum;i++)
	{
		if(info.lineInfo[i][12].exist==1&&info.towerInfo[i].owner!=info.myID)
		{
			judge=1;
			break;
		}
	}
	if(info.round<37&&(judge==0||info.towerInfo[12].owner==info.myID))//1.2. 4.5 7.8 10.11
	{
		if(info.towerInfo[1].owner==info.myID)
			a=1;
		if(info.towerInfo[4].owner==info.myID)
			a=4;
		if(info.towerInfo[7].owner==info.myID)
			a=7;
		if(info.towerInfo[10].owner==info.myID)
			a=10;
		if((getDistance(info.towerInfo[a].position,info.towerInfo[12].position)/10<info.towerInfo[a].resource)&&(info.towerInfo[12].owner==-1))
		{
			if(info.lineInfo[a][12].exist!=1)
				info.myCommandList.addCommand(addLine,a,12);
		}
		if((info.lineInfo[a][12].exist==1)&&(info.lineInfo[a][12].state==Arrived))
		{
			if(info.lineInfo[a][12].resource+info.towerInfo[12].occupyPoint>info.towerInfo[12].resource/3)
				info.myCommandList.addCommand(cutLine,a,12,10);
		}
		if(info.towerInfo[12].owner==info.myID)
		{
			if(info.lineInfo[12][a].exist!=1)
			{
				if(getDistance(info.towerInfo[a].position,info.towerInfo[12].position)/10<info.towerInfo[12].resource)
					info.myCommandList.addCommand(addLine,12,a);
			}
			if((info.towerInfo[a].resource>100)&&(info.lineInfo[12][a].exist==1))
				info.myCommandList.addCommand(cutLine,12,a,0);
		}
	}
		if(judge==1&&info.towerInfo[12].owner!=info.myID&&info.round<37)
	{
		for(i=0;i<info.towerNum;i++)
		{
			if(info.lineInfo[i][12].exist==1&&info.towerInfo[i].owner==info.myID)
			{
				info.myCommandList.addCommand(cutLine,i,12,info.lineInfo[i][12].resource);
			}
		}
	}//先打中立塔
	for(i=0;i<info.towerNum;i++)
	{
		sourceAll=sourceAll+info.towerInfo[i].resource;
		if(info.towerInfo[i].owner==info.myID)
		{
			sourceMine=sourceMine+info.towerInfo[i].resource;
		}
	}
	if(sourceMine>(sourceAll*0.35))
	{
		judge3=1;
	}//判断我方资源量占比
	if(info.playerInfo[info.myID].rank!=1&&judge3==1)
	{
		judge3=2;
		for(i=0;i<4;i++)
		{
			if(info.playerInfo[i].rank==1)
			{
				token5=i;
				break;
			}
		}
	}
	else
	{
		for(i=0;i<4;i++)
		{
			if(info.playerInfo[i].rank==2)
			{
				token5=i;
				break;
			}
		}
	}//压制威胁最大的势力
	for(i=0;i<4;i++)
	{
		if(i!=info.myID)
		{
			n=0;
			for(j=0;j<info.towerNum;j++)
			{
				if(info.towerInfo[j].owner==info.myID)
				{
					for(k=0;k<info.towerNum;k++)
					{
						if(info.lineInfo[k][j].exist==1&&info.towerInfo[k].owner==i)
						{
							n++;
						}
					}
				}
			}
			if(n>nMax&&n>=3)
			{
				judge6=1;
				nMax=n;
				token6=i;
			}
		}
	}//披甲龙龟了解一下？
	for(i=0;i<info.towerNum;i++)
	{
		if(info.towerInfo[i].owner!=info.myID)
		{
			token4=info.towerInfo[i].owner;
			expense=info.towerInfo[i].resource;
			n=0;//该塔打敌方兵线数
			m=0;//该塔支援己方兵线数
			for(j=0;j<info.towerNum;j++)
			{
				if(info.lineInfo[i][j].exist==1)
				{
					expense=expense+info.lineInfo[i][j].resource/2;//兵线上的兵力0.5
					if(info.towerInfo[j].owner!=info.myID)
					{
						n++;
						if(info.towerInfo[j].owner==info.towerInfo[i].owner)
						{
							m++;
						}
					}
				}
			}
			expense=expense-n*10;
			if(m>=2&&info.towerInfo[i].strategy==Grow)//（待改动）
			{			
				expense=expense-20*m;				
			}
			for(j=0;j<info.towerNum;j++)
			{
				if(info.lineInfo[j][i].exist==1)
				{
					if(info.towerInfo[j].owner!=info.myID)
					{
						if(info.towerInfo[j].owner==token4)
						{
						    expense=expense+20;//支援的兵力
						}
						else
						{
							expense=expense+getDistance(info.towerInfo[i].position,info.towerInfo[j].position)/40;//第三方的威胁
						}
					}
				}
			}
			if(info.towerInfo[i].strategy==Grow)
			{
				if(info.playerInfo[token4].technologyPoint<3)
				{
					expense=expense-50;
				}
				else
				{
				    expense=expense-20;
				}
			}
			if(info.towerInfo[i].strategy==Defence&&info.towerInfo[i].resource>50)
			{
				expense=expense+50;
			}
			if(i==12)
			{
				expense=expense+400;//尽量不打中心塔
			}
			token2=info.towerInfo[i].owner;
			for(j=0;j<info.towerNum;j++)
			{
				if(info.towerInfo[j].owner==token2&&j!=i)//判断它周围可能的支援火力
				{
					if(info.towerInfo[j].currLineNum==0)
					{
						expense=expense+info.towerInfo[j].resource/4;
					}
					if(info.towerInfo[j].currLineNum==1)
					{
						expense=expense+info.towerInfo[j].resource/8;
					}
				}
			}
			if(token2!=Shrine&&info.round<80)
			{
				expense=expense+50;
			}
			if(judge3!=0&&info.towerInfo[i].owner==token5)//（有调）
			{
				if(judge3==1)
				{
					expense=expense-30;
				}
				else
				{
					expense=expense-80;
				}
			}
			if(judge6==1&&info.towerInfo[i].owner==token6)
			{
				expense=expense-150;
			}
			if(expense<minexpense)
			{
				minexpense=expense;
			}
			if(MINEXPENSE-minexpense>15||info.towerInfo[token3].owner==info.myID)
			{
				MINEXPENSE=minexpense;
				token3=i;
			}
		}
	}//找到最值得打得塔
	player1=info.towerInfo[token3].owner;
	if(info.round<80||Titter==0)
	{
		warjudge=0;
		n=0;//别的势力打该势力的兵线数
		m=0;//该势力打别人的兵线数
		for(i=0;i<info.towerNum;i++)
		{
			if(info.towerInfo[i].owner!=player1&&info.towerInfo[i].owner!=info.myID)
			{
				for(j=0;j<info.towerNum;j++)
				{
					if(info.towerInfo[j].owner==player1&&info.lineInfo[i][j].exist==1)
					{
						n++;
					}
				}
			}
		}
		for(i=0;i<info.towerNum;i++)
		{
			if(info.towerInfo[i].owner==player1)
			{
				for(j=0;j<info.towerNum;j++)
				{
					if(info.towerInfo[j].owner!=player1&&info.lineInfo[i][j].exist==1&&info.towerInfo[j].owner!=info.myID)
					{
						m++;
					}
				}
			}
		}
		if(n>=3&&m>=3)//改动
		{
			warjudge=1;
			Titter=1;
			Shrine=info.towerInfo[token3].owner;
		}
	}//初期找塔判断条件
	if(nMax>=3&&info.round>70)
	{
		Titter=1;
		warjudge=1;
	}//避免被打爆不还手
	for(i=0;i<info.towerNum;i++)
	{
		if(info.towerInfo[i].owner==info.myID&&info.towerInfo[i].strategy!=Defence)
		{
			expense=0;
			n=0;
			for(j=0;j<info.towerNum;j++)
			{
				if(info.towerInfo[j].owner!=info.myID&&info.lineInfo[j][i].exist==1)
				{
					expense=expense+info.lineInfo[j][i].resource;
					n++;
				}
			}
			expense=expense*1.5;
			if(expense>info.towerInfo[i].resource+5||info.towerInfo[i].resource<8)
			{
				for(j=0;j<info.towerNum;j++)
				{
					if(info.lineInfo[i][j].exist==1)
					{
						info.myCommandList.addCommand(cutLine,i,j,info.lineInfo[i][j].resource);
					}
				}
			}
		}
	}//防御切断(非防御塔)
	for(i=0;i<info.towerNum;i++)
	{
		if(info.towerInfo[i].owner==info.myID&&(info.towerInfo[i].strategy==Grow||info.towerInfo[i].strategy==Normal))
		{
			judge=0;
			judge2=1;
			if(info.round>100)
			{
				judge2==0;
			}
			for(j=0;j<info.towerNum;j++)
			{
				if(info.lineInfo[j][i].exist==1)
				{
					if(info.towerInfo[j].owner!=info.myID)
					{
						if(info.lineInfo[j][i].state==Arrived&&info.towerInfo[j].strategy==Attack)
						{
							judge=1;
							break;
						}
						else
						{
							if(info.lineInfo[j][i].state==Extending)//这一块似乎有点副作用，原因不明
							{
								if((getDistance(info.towerInfo[i].position,info.towerInfo[j].position )/10-info.lineInfo[j][i].resource)<=6&&info.towerInfo[j].strategy==Attack)
								{
									judge=1;
									break;
								}
							}
						}
					}
				}
			}
			for(j=0;j<info.towerNum;j++)
			{
				if(info.lineInfo[i][j].exist==1&&info.towerInfo[j].owner!=info.myID)
				{
					judge2=1;
					break;
				}
			}
			if(judge==1)
			{
				if(judge2==1)
				{
					if(info.towerInfo[i].strategy!=Attack&&info.playerInfo[info.myID].technologyPoint>=5)
					{
						info.myCommandList.addCommand(changeStrategy,i,Attack);
					}
				}
				else
				{
					if(info.towerInfo[i].strategy!=Attack&&info.playerInfo[info.myID].technologyPoint>=5)
					{
						info.myCommandList.addCommand(changeStrategy,i,Attack);
					}
				}
			}
		}
	}//被打的塔改变状态
	for(i=0;i<info.towerNum;i++)
	{
		if(info.towerInfo[i].owner==info.myID&&info.round>=35)
		{
			for(j=0;j<info.towerNum;j++)
			{
				if(info.lineInfo[i][j].exist==1&&info.towerInfo[j].owner==-1&&info.lineInfo[i][j].state==Arrived)
				{
					if(info.towerInfo[j].occupyOwner==info.myID)
					{
						if(info.lineInfo[i][j].resource>(info.towerInfo[j].resource/3-info.towerInfo[j].occupyPoint+3))
						{
							info.myCommandList.addCommand(cutLine,i,j,0);
						}
					}
					else
					{
						if((info.lineInfo[i][j].resource-info.towerInfo[j].occupyPoint-info.towerInfo[j].resource/3)>3)
						{
							info.myCommandList.addCommand(cutLine,i,j,0);
						}
					}
				}
			}
		}
	}//中立塔快速攻击
	for(i=0;i<info.towerNum;i++)
	{
		if(info.towerInfo[i].owner==info.myID&&info.towerInfo[i].strategy!=Defence)
		{
			for(j=0;j<info.towerNum;j++)
			{
				if(info.lineInfo[i][j].exist==1&&info.towerInfo[j].owner!=info.myID&&(j!=token3))
				{
					judge=0;
					expense=info.towerInfo[j].resource;
					for(k=0;k<info.towerNum;k++)
					{
						if(info.lineInfo[j][k].exist==1)
						{
							expense+=info.lineInfo[j][k].resource;
						}
					}
					for(k=0;k<info.towerNum;k++)
					{
						if(info.lineInfo[k][j].exist==1&&info.towerInfo[k].owner!=info.myID)
						{
							judge=1;
						}
					}
					if(info.towerInfo[j].resource<70&&info.towerInfo[j].strategy!=Defence)
						{
							judge=0;
						}
						if(info.towerInfo[j].strategy==Defence&&expense>30)
						{
							judge=1;
						}
						if(info.lineInfo[j][i].exist==1&&(getDistance(info.towerInfo[i].position,info.towerInfo[j].position)/10)>40&&info.lineInfo[i][j].resource<(getDistance(info.towerInfo[i].position,info.towerInfo[j].position)/25))
						{
							judge=2;
						}
						if(judge==1&&(info.lineInfo[i][j].resource+info.towerInfo[i].resource)<=info.towerInfo[i].maxResource)
						{
							info.myCommandList.addCommand(cutLine,info.towerInfo[i].id,info.towerInfo[j].id,info.lineInfo[i][j].resource);
						}
						if(judge==0&&(info.lineInfo[i][j].resource+info.towerInfo[i].resource)<=info.towerInfo[i].maxResource)
						{
							if(info.towerInfo[j].resource>70&&judge3!=1&&info.towerInfo[i].resource<180)
							{
								info.myCommandList.addCommand(cutLine,info.towerInfo[i].id,info.towerInfo[j].id,info.lineInfo[i][j].resource);
							}
						}
				}
			}
		}
	}//切断打无谓塔（远距离对峙参数有调）
	for(i=0;i<info.towerNum;i++)
	{
		if(info.towerInfo[i].owner==info.myID)
		{
			for(j=0;j<info.towerNum;j++)
			{
				if(getDistance(info.towerInfo[i].position,info.towerInfo[j].position)/10>=23&&info.lineInfo[i][j].exist==1&&info.lineInfo[i][j].state==Arrived&&info.towerInfo[j].owner!=info.myID)
				{
					judge=0;
					m=0;//我塔兵线
					n=0;//敌塔兵线
					for(k=0;k<info.towerNum;k++)
					{
						if(info.lineInfo[k][j].exist==1&&info.towerInfo[k].owner!=info.towerInfo[j].owner)
						{
							if(info.towerInfo[k].owner==info.myID)
							{
								m++;
							}
							else
							{
								n++;
								if(info.lineInfo[k][j].state==Arrived)
								{
									judge=1;
									break;
								}
							}
						}
					}
					if(n>=3&&m<=2)
					{
						judge=1;
					}
					if(judge==0)
					{
						info.myCommandList.addCommand(cutLine,i,j,0);
					}
				}
			}
		}
	}//速攻
	for(i=0;i<info.towerNum;i++)
	{
		if(info.towerInfo[i].owner==info.myID&&info.towerInfo[i].strategy!=Defence)
		{
			for(j=0;j<info.towerNum;j++)
			{
				if(info.lineInfo[i][j].exist==1&&info.towerInfo[j].owner!=info.myID)
				{
					if(info.towerInfo[i].strategy!=Attack)
					{
						if(info.lineInfo[j][i].exist==1)
						{
							if(info.towerInfo[j].strategy!=Defence&&(info.lineInfo[j][i].resource>getDistance(info.towerInfo[i].position,info.towerInfo[j].position)/25))
							{
							if(info.towerInfo[i].strategy==Normal)
							{
								if(info.playerInfo[info.myID].technologyPoint>=10)
								{
									info.myCommandList.addCommand(changeStrategy,info.towerInfo[i].id,Attack);
							         break;
								}
							}
							else
							{
								if(info.playerInfo[info.myID].technologyPoint>=10)
								{
									info.myCommandList.addCommand(changeStrategy,info.towerInfo[i].id,Attack);
							        break;
								}
							}
							}
						}
						else
						{
							if(((getDistance(info.towerInfo[i].position,info.towerInfo[j].position)/10-info.lineInfo[i][j].resource)<4)&&info.towerInfo[j].strategy==Grow)
							{
								if(info.towerInfo[i].strategy==Normal)
							   {
								    if(info.playerInfo[info.myID].technologyPoint>=8)
								   {
									info.myCommandList.addCommand(changeStrategy,info.towerInfo[i].id,Attack);
							         break;
								   }
							   }
							  else
							  {
								  if(info.playerInfo[info.myID].technologyPoint>=10)
								 {
									info.myCommandList.addCommand(changeStrategy,info.towerInfo[i].id,Attack);
							        break;
								 }
							  }
							}
						}
					}
				}
			}
		}
	}//有利的情况下才转变状态，从而节省科技值
	for(i=0;i<info.towerNum;i++)
	{
		if(info.towerInfo[i].owner==info.myID&&info.lineInfo[i][token3].exist!=1&&i!=token1&&info.towerInfo[i].strategy!=Defence&&warjudge==1&&Titter==1)
		{
			judge=0;//0表示没被打
			expense=0;
			n=0;
			for(j=0;j<info.towerNum;j++)
			{
				if(info.towerInfo[j].owner!=info.myID&&info.lineInfo[j][i].exist==1)
				{
					judge=1;
					n++;
				}
			}
			expense=expense+getDistance(info.towerInfo[i].position,info.towerInfo[token3].position )/10;
			if(judge==0)
			{
				if((info.towerInfo[i].resource-expense)>0&&info.towerInfo[i].resource>(20+info.towerInfo[i].currLineNum*30)&&info.round>55)
				{
						info.myCommandList.addCommand(addLine,info.towerInfo[i].id,info.towerInfo[token3].id);
				}
			}
			else
			{
				if((info.towerInfo[i].resource-expense)>(40+20*n+30*info.towerInfo[i].currLineNum)&&info.round>45)
				{
						info.myCommandList.addCommand(addLine,info.towerInfo[i].id,info.towerInfo[token3].id);
				}
			}
		}
	}//攻击函数
	for(i=0;i<info.towerNum;i++)
	{
		if(info.towerInfo[i].owner==info.myID&&i!=12)
		{
			judge=0;//1表示有支援的必要
			n=0;
			for(j=0;j<info.towerNum;j++)
			{
				if(info.lineInfo[j][i].exist==1&&info.towerInfo[j].owner!=info.myID)
				{
					n++;
				}
			}
			if(n>=3)
			{
				judge=1;
			}
			for(j=0;j<info.towerNum;j++)
			{
				if(info.lineInfo[j][i].exist==1&&info.towerInfo[j].owner!=info.myID)
				{
					if((info.towerInfo[j].resource-info.towerInfo[i].resource)>60)
					{
						judge=1;
						break;
					}
				}
			}
			if(judge==1)
			{
				for(j=0;j<info.towerNum;j++)
				{
					if(info.towerInfo[j].owner==info.myID&&j!=i)
					{
						judge2=0;
						n=0;
						for(k=0;k<info.towerNum;k++)
						{
							if(info.lineInfo[k][j].exist==1&&info.towerInfo[k].owner!=info.myID)
							{
								judge2=1;
								n++;
							}
						}
						if(judge2==1)
						{
							if(info.towerInfo[j].currLineNum<2&&(info.towerInfo[j].resource-getDistance(info.towerInfo[i].position,info.towerInfo[j].position)/10)>(50+n*30))
							{
								if(info.lineInfo[j][i].exist!=1&&j!=i)
								{
									info.myCommandList.addCommand(addLine,j,i);
								}
							}
						}
						else
						{
							if(info.towerInfo[j].currLineNum<3&&(info.towerInfo[j].resource-getDistance(info.towerInfo[i].position,info.towerInfo[j].position)/10)>(30+10*info.towerInfo[j].currLineNum))
							{
								if(info.lineInfo[j][i].exist!=1&&j!=i)
								{
									info.myCommandList.addCommand(addLine,j,i);
								}
							}
						}
					}
				}
			}
		}
	}//支援函数1.0
	for(i=0;i<info.towerNum;i++)
	{
		if(info.towerInfo[i].owner==info.myID&&i!=12)
		{
			for(j=0;j<info.towerNum;j++)
			{
				if(info.towerInfo[j].owner==info.myID&&info.lineInfo[i][j].state==Arrived)
				{
					if(info.lineInfo[i][j].resource<(info.towerInfo[j].maxResource-info.towerInfo[j].resource))
					{
						info.myCommandList.addCommand(cutLine,i,j,0);
					}
					else
					{
						info.myCommandList.addCommand(cutLine,i,j,(info.lineInfo[i][j].resource-(info.towerInfo[j].maxResource-info.towerInfo[j].resource)));
					}
				}
			}
		}
	}//支援切断
	if(info.towerInfo[12].owner==info.myID&&info.round>=35)//中间塔的操作
	{
		if(info.towerInfo[12].resource>=40)
		{
			if(info.lineInfo[12][token3].exist!=1)
			{
				info.myCommandList.addCommand(addLine,info.towerInfo[12].id,info.towerInfo[token3].id);
			}
		}
	}//骚动制造者
for(i=0;i<info.towerNum;i++)//己方安全的且未参与进攻的后方塔转化为成长模式
	{
		if(info.towerInfo[i].owner==info.myID&&info.towerInfo[i].resource<130)
		{
			judge=0;
			for(j=0;j<info.towerNum;j++)
			{
				if(info.lineInfo[j][i].exist==1&&info.towerInfo[j].owner!=info.myID)
				{
						judge=1;
						break;
				}
			}
			if(info.round>40&&info.playerInfo[info.myID].technologyPoint<10)
			{
				judge=1;
		    }
			if(info.towerInfo[i].strategy!=Grow&&judge==0)
			{
					info.myCommandList.addCommand(changeStrategy,info.towerInfo[i].id,3);
					break;
			}
		}
	}//成长
if((info.playerInfo[info.myID].technologyPoint-(info.playerInfo[info.myID].RegenerationSpeedLevel+1)*2)>=5)
	{
		if(info.playerInfo[info.myID].RegenerationSpeedLevel<5)//升级回复
		       info.myCommandList.addCommand(upgrade,0);
	}
	if(info.playerInfo[info.myID].RegenerationSpeedLevel>4&&(info.playerInfo[info.myID].technologyPoint-((info.playerInfo[info.myID].ExtraControlLevel+2)*2-1))>=5)
	{
	      if(info.playerInfo[info.myID].ExtraControlLevel<3)//升级操作数
		      info.myCommandList.addCommand(upgrade,2);
	}
	if(info.playerInfo[info.myID].RegenerationSpeedLevel>4&&(info.playerInfo[info.myID].technologyPoint-(info.playerInfo[info.myID].DefenceLevel+1)*2)>=5)
	{
	      if(info.playerInfo[info.myID].DefenceLevel<3)//升级城墙
		      info.myCommandList.addCommand(upgrade,3);
	}
	if(info.playerInfo[info.myID].RegenerationSpeedLevel>4&&(info.playerInfo[info.myID].technologyPoint-(info.playerInfo[info.myID].ExtendingSpeedLevel+1)*2)>=5)
	{
	      if(info.playerInfo[info.myID].ExtendingSpeedLevel<5)//升级兵线延伸速度
		      info.myCommandList.addCommand(upgrade,1);
	}	//科技	
for(i=0;i<info.towerNum;i++)
	{
		if(info.towerInfo[i].owner==info.myID)
		{
			if(info.towerInfo[i].resource>30)
			{
				for(j=0;j<info.towerNum;j++)
				{
					if(info.lineInfo[j][i].exist==1&&info.lineInfo[j][i].state==Arrived&&info.towerInfo[j].owner!=info.myID)
					{
						if(info.towerInfo[i].resource-getDistance(info.towerInfo[i].position,info.towerInfo[j].position)/20>15&&info.towerInfo[i].currLineNum<info.towerInfo[i].maxLineNum)
						{
							info.myCommandList.addCommand(addLine,i,j);
						}
					}
				}
			}
		}
	}//防御对峙系统
}
